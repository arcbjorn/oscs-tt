[{"/home/arc/projects/javascript/oscs-tt/client/src/pages/LandingPage.tsx":"1","/home/arc/projects/javascript/oscs-tt/client/src/pages/SignInAndSignUpPage.tsx":"2","/home/arc/projects/javascript/oscs-tt/client/src/App.tsx":"3","/home/arc/projects/javascript/oscs-tt/client/src/index.tsx":"4","/home/arc/projects/javascript/oscs-tt/client/src/theme.ts":"5"},{"size":5217,"mtime":1608485143578,"results":"6","hashOfConfig":"7"},{"size":3987,"mtime":1608485240059,"results":"8","hashOfConfig":"7"},{"size":578,"mtime":1608485074468,"results":"9","hashOfConfig":"7"},{"size":802,"mtime":1608485088658,"results":"10","hashOfConfig":"7"},{"size":366,"mtime":1608485123628,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ikct0y",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arc/projects/javascript/oscs-tt/client/src/pages/LandingPage.tsx",["24"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Timelapse from '@material-ui/icons/Timelapse';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n    marginLeft: 'auto',\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3];\n\nexport default function LandingPage() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar className={classes.toolbar}>\n          <Timelapse className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            OSCS Time Tracker\n          </Typography>\n          <Link variant=\"button\" color=\"secondary\" href=\"/signin\" className={classes.link}>\n            SignIn\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              The Open Source Degree Time tracker for everyone\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Something short and leading about the collection below—its contents, the creator, etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </>\n  );\n}\n","/home/arc/projects/javascript/oscs-tt/client/src/pages/SignInAndSignUpPage.tsx",["25"],"/home/arc/projects/javascript/oscs-tt/client/src/App.tsx",["26","27"],"import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\n\nimport SignInAndSignUpPage from './pages/SignInAndSignUpPage';\nimport LandingPage from './pages/LandingPage';\n\nfunction App() {\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() => (false ? <Redirect to=\"/\" /> : <SignInAndSignUpPage />)}\n        />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/arc/projects/javascript/oscs-tt/client/src/index.tsx",[],"/home/arc/projects/javascript/oscs-tt/client/src/theme.ts",[],{"ruleId":"28","severity":1,"message":"29","line":70,"column":16,"nodeType":"30","messageId":"31","endLine":70,"endColumn":38},{"ruleId":"28","severity":1,"message":"29","line":58,"column":16,"nodeType":"30","messageId":"31","endLine":58,"endColumn":46},{"ruleId":"28","severity":1,"message":"29","line":9,"column":1,"nodeType":"30","messageId":"31","endLine":9,"endColumn":15},{"ruleId":"32","severity":1,"message":"33","line":17,"column":26,"nodeType":"34","messageId":"35","endLine":17,"endColumn":31},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","no-constant-condition","Unexpected constant condition.","Literal","unexpected"]